pipeline {
    agent any
    stages {

        stage('Initial Pipeline ENV') {
            steps {
                script {
                env.imageName = 'doc_server_test'
                env.imageTag = 'latest'
                env.containerName = 'AI_PLATFROM'
                }
            }
        }

        stage('Stop and Remove Container') {
            steps {
                script {
                    // Define the container name you want to remove
                    def containerName = env.containerName
                    
                    // Stop and remove the existing container if it exists
                    sh "docker stop ${containerName} || true"
                    sh "docker rm ${containerName} || true"
                }
            }
        }

        stage('Remove Image') {
            steps {
                script {
                    // Define the image name and tag you want to remove
                    def imageName = env.imageName 
                    def imageTag = env.imageTag 
                    
                    // Remove the existing image if it exists
                    sh "docker rmi ${imageName}:${imageTag} || true"
                }
            }
        }

        stage('Docker Image Build') {
            steps {
                script {
                    // Build and run the Docker container
                    docker.build("${env.imageName}:${env.imageTag}")
                }

            }
        }
        stage('Docker Container Build') {
            steps {
                script {
                    // Define the container name
                    def dockerContainer =  docker.image("${env.imageName}").run("--name ${env.containerName}")

                }
            }
        }
    }
}